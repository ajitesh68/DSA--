A+

MY CODE:-
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
         vector<int> arr;
    arr.push_back(nums[0]);

    for (int i = 1; i < nums.size(); ++i) {
        if (nums[i] != nums[i - 1]) {
            arr.push_back(nums[i]);
        }
    }

    for (int i = 0; i < arr.size(); ++i) {
        nums[i] = arr[i];
    }

    return arr.size();
    }
};


OPTIMAL CODE:-

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int j=0;
        for(int i=1;i<nums.size();i++)
        {
            if(nums[j] != nums[i])
            {
                nums[j+1]=nums[i];
                j++;
            }
        }
        return j+1;
    }
};


without in extra space :-

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        k = k % n;  // in case k > n

        // Reverse whole array
        reverse(nums.begin(), nums.end());
        // Reverse first k elements
        reverse(nums.begin(), nums.begin() + k);
        // Reverse remaining n-k elements
        reverse(nums.begin() + k, nums.end());
    }
};
