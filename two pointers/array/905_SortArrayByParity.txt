A+

but not the optimal approach



class Solution {
public:
    vector<int> sortArrayByParity(vector<int>& nums) {
        int left = 0, right = nums.size() - 1;
        
        while (left < right) {
            // If left is even, it's fine
            if (nums[left] % 2 == 0) {
                left++;
            }
            // If right is odd, it's fine
            else if (nums[right] % 2 == 1) {
                right--;
            }
            // Swap if left is odd and right is even
            else {
                swap(nums[left], nums[right]);
                left++;
                right--;
            }
        }
        return nums;
    }
};





class Solution {
public:
    vector<int> sortArrayByParity(vector<int>& nums) {
        vector<int> result;
        for(int i = 0;i<nums.size();i++){
            if(nums[i]%2==0){
                result.push_back(nums[i]);
            }
        }
        for(int j = 0;j<nums.size();j++){
            if(nums[j]%2 != 0){
                result.push_back(nums[j]);
            }
        }
        return result;
    }
};

