B

 we were calculating no. of times we have to add perfect squares so (ans) is storing the values for this


Algorithm:-
 take no. n
 subtract the value(perfect squares) from n
 store the no.steps taken to reach  0 in ans
 add +1 to every time you subtract 
 after all possible iterations return min value of ans 



Memoization:-(you store value at the index in dp from where you are starting)
class Solution {
public:
    int numSquares(int n) {
        vector<int> dp(n+1,-1);
        int n1 = n;
        int ans = INT_MAX;
        helper(n,dp);
        return dp[n1];
    }

    int helper(int n, vector<int>& dp) {

        if (n == 0)
            return 0;

        if(dp[n] != -1)return dp[n];
        int ans = INT_MAX;
        for (int i = 1; i * i <= n; i++) {                                   #logic 
            ans = min(ans, 1 + helper(n - i * i,dp));                        #logic 
        }

        return dp[n]=ans;
    }
};



Tabulation:-(you store value at the final index(where you are going) in dp)

class Solution {
public:
    int numSquares(int n) {
        vector<int> dp(n+1, INT_MAX);
        dp[0] = 0;

        for (int i = 1; i <= n; i++) {
            for (int j = 1; j*j <= i; j++) {
                dp[i] = min(dp[i], 1 + dp[i - j*j]);
            }
        }
        return dp[n];
    }
};
