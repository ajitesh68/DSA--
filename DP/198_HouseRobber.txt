A


class Solution {
public:
    int rob(vector<int>& nums) {
        int n = nums.size();
        vector<int> dp(n, -1); 
        int from1= helper(nums, 0, dp);
        int from2 = helper(nums, 1, dp);
        return max(from1,from2);
    }

    int helper(vector<int>& nums, int index, vector<int>& dp) {
        if(index >= nums.size()) return 0;

        if(dp[index] != -1) return dp[index];

        int pick2 = nums[index] + helper(nums, index + 2, dp);
        int pick3 = nums[index] + helper(nums, index + 3, dp);

        return dp[index] = max(pick2, pick3);
    }
};