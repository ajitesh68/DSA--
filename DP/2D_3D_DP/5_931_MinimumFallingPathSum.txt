A+



class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int m = matrix.size();
        vector<vector<int>> dp(m);
        for (int i = 0; i < m; i++) {
            dp[i] = vector<int>(matrix[i].size(), 0);
        }

        dp[m-1] = matrix[m-1];

        for(int i = m-2;i>=0;i--){
            for(int j = 0;j<m;j++){
                if(j==m-1){
                    dp[i][j] = matrix[i][j] + min(dp[i+1][j],dp[i+1][j-1]);
                }
                else if(j==0) dp[i][j] = matrix[i][j] + min(dp[i+1][j],dp[i+1][j+1]);
                else dp[i][j] = matrix[i][j] + min(dp[i+1][j],min(dp[i+1][j-1],dp[i+1][j+1]));
                
            }
        }
        
        int mini = INT_MAX;
        for(int i = 0; i<dp[0].size(); i++){
            mini = min(mini,dp[0][i]);
        }
        return mini;
    }
};



