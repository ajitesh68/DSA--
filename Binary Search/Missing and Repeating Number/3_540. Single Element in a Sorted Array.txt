A+



class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int n = nums.size();
        if (n == 1)
            return nums[0];
        if (nums[0] != nums[1])
           return nums[0];        
        int high = n - 1, low = 0;
        int mid;
        while (low <= high) {
            mid = (low + high) / 2;
            if ((nums[mid] != nums[mid - 1]) && (nums[mid] != nums[mid + 1]))
                return nums[mid];
            else if (mid % 2 == 0)
                if (nums[mid] == nums[mid + 1])
                    low = mid + 1;
                else
                    high = mid - 1;
            else
                if (nums[mid] != nums[mid + 1])
                low = mid + 1;
                else
                high = mid - 1;
        }

        return -1;
    }
};