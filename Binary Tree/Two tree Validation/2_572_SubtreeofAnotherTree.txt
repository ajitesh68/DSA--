A


what I did:-(   WRONG   )

class Solution {
public:
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if (!root && !subRoot)
                return true;
        if (!root || !subRoot)
                return false;
        if (root->val == subRoot->val) {
            if (!root && !subRoot)
                return true;
            if (!root || !subRoot)
                return false;
            return (root->val == subRoot->val) &&
                   isSubtree(root->left, subRoot->left) &&
                   isSubtree(root->right, subRoot->right);
        } else {
            return isSubtree(root->right, nullptr) ||
                   isSubtree(root->left, nullptr);
        }
        return false;
    }
};



what is correct :-(    CORRECT    )


class Solution {
public:
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if (!subRoot) return true;
        if (!root) return false;

        if (root->val == subRoot->val) {
            if (isSame(root, subRoot)) return true;
        }
        return isSubtree(root->left, subRoot) || isSubtree(root->right, subRoot);
    }

    bool isSame(TreeNode* a, TreeNode* b) {
        if (!a && !b) return true;
        if (!a || !b) return false;
        return a->val == b->val && isSame(a->left, b->left) && isSame(a->right, b->right);
    }
};

