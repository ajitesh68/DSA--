A

remember one thing to always dry run code which you find difficult;

class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> result;
        string s = "";
        s+=to_string(root->val);
        helper(root,s,result);
        return result;
    }

    vector<string> helper(TreeNode* root,string s,vector<string>& result) {
        if (!(root->left) && !(root->right)) {
            result.push_back(s);
            return{};
        }
        
    
        if (root->left) {
            helper(root->left, s + "->" + to_string(root->left->val), result);

        }
        if (root->right) {
           helper(root->right, s + "->" + to_string(root->right->val), result);

        }

        return result;
    }
};