A+


class Solution {
public:
    vector<vector<int>> findSubsequences(vector<int>& nums) {
        set<vector<int>> resultSet;
        vector<int> temp;
        helper(nums, 0, temp, resultSet);

        return vector<vector<int>>(resultSet.begin(), resultSet.end());
    }

    void helper(vector<int>& nums, int index, vector<int>& temp, set<vector<int>>& resultSet) {
        if (temp.size() >= 2) {
            resultSet.insert(temp);
        }

        for (int i = index; i < nums.size(); ++i) {
            if (temp.empty() || nums[i] >= temp.back()) {
                temp.push_back(nums[i]);
                helper(nums, i + 1, temp, resultSet);
                temp.pop_back(); 
            }
        }
    }
};
