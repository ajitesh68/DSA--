A+(30 min)




dfs approach:-
class Solution {
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        vector<bool> visited(isConnected.size(),false);
        int grp = 0;
        for (int i = 0; i < visited.size(); i++) {
            if (visited[i] == false) {
                dfs(isConnected,visited,i);
                grp++;
            }
        }
        return grp;
    }
    void dfs(vector<vector<int>>& isConnected, vector<bool>& visited, int x) {
        if (visited[x] == true)
            return;

        visited[x] = true;

        for (int u=0;u<isConnected.size();u++) {
            if (isConnected[x][u] == 1) {
                if (!visited[u]) {
                    dfs(isConnected, visited, u);
                }
            }
        }
    }
};